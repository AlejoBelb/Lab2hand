// Prisma schema para Lab2hand — preserva columnas existentes para migración segura

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ===== Enums =====
enum Role {
  ADMIN
  TEACHER
  STUDENT
}

// Mantener valores antiguos y nuevos para no romper data existente
enum ExperimentStatus {
  ACTIVE
  INACTIVE
  DRAFT
  PUBLISHED
  ARCHIVED
}

enum Visibility {
  PUBLIC
  PRIVATE
  UNLISTED
}

// ===== Modelos =====

// Mantener columnas existentes para no perder datos
model User {
  id            String         @id @default(cuid())
  email         String         @unique
  passwordHash  String
  role          Role           @default(STUDENT)

  // Columnas existentes preservadas
  firstName     String?
  lastName      String?
  isActive      Boolean?       @default(true)

  // Campo opcional para mostrar nombre completo
  displayName   String?

  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  refreshTokens RefreshToken[]
}

model RefreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  // Preservar expiresAt si ya existe en la DB
  expiresAt DateTime?
  revokedAt DateTime?
}

model Experiment {
  id          String            @id @default(cuid())
  slug        String            @unique
  name        String
  description String?
  visibility  Visibility        @default(PUBLIC)
  status      ExperimentStatus  @default(ACTIVE)
  order       Int               @default(0)
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt

  scenarios   Scenario[]
}

model Scenario {
  id           String     @id @default(cuid())
  experimentId String
  experiment   Experiment @relation(fields: [experimentId], references: [id], onDelete: Cascade)
  slug         String
  name         String
  order        Int        @default(0)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@unique([experimentId, slug])
  @@index([experimentId, order])
}
