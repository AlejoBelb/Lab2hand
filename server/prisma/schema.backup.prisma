// server/prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
}

enum Visibility {
  PRIVATE
  UNLISTED
  PUBLIC
}

enum ExperimentStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

model User {
  // Identificador único
  id           String         @id @default(cuid())

  // Datos básicos
  email        String         @unique
  passwordHash String
  firstName    String?
  lastName     String?

  // Rol y estado
  role         Role           @default(STUDENT)
  isActive     Boolean        @default(true)

  // Relaciones
  refreshTokens RefreshToken[]
  experiments   Experiment[]  @relation("UserExperiments")

  // Trazabilidad
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt

  @@index([role, isActive])
}

model RefreshToken {
  // Identificador único
  id         String   @id @default(cuid())

  // Token y control
  token      String   @unique
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt  DateTime
  revokedAt  DateTime?
  createdAt  DateTime @default(now())

  @@index([userId, expiresAt])
}

model Experiment {
  // Identificador único
  id          String           @id @default(cuid())

  // Contenido y metadata
  title       String
  slug        String           @unique
  description String?
  status      ExperimentStatus @default(DRAFT)
  visibility  Visibility       @default(PRIVATE)

  // Dueño/autores
  ownerId     String
  owner       User             @relation("UserExperiments", fields: [ownerId], references: [id])

  // Trazabilidad
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt

  @@index([ownerId, status, visibility])
  @@index([title])
}
